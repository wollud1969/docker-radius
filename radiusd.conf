name = radiusd

prefix = /opt/freeradius
exec_prefix = ${prefix}
sysconfdir = ${prefix}/etc
localstatedir = ${prefix}/var
sbindir = ${exec_prefix}/sbin
myconfdir = /opt/freeradius/etc/myconf
logdir = ${myconfdir}/logs
raddbdir = ${sysconfdir}/raddb
confdir = ${raddbdir}
certdir = ${myconfdir}/certs
cadir = ${myconfdir}/certs
run_dir = ${localstatedir}/run/${name}
db_dir = ${raddbdir}
libdir = ${exec_prefix}/lib
pidfile = ${run_dir}/${name}.pid

correct_escapes = true

max_request_time = 30
cleanup_delay = 5
max_requests = 16384
hostname_lookups = no

log {
	destination = files
	colourise = yes
	file = ${logdir}/radius.log
	syslog_facility = daemon
	stripped_names = no
	auth = yes
	auth_badpass = yes
	auth_goodpass = no
   	msg_denied = "You are already logged in - access denied"
}

security {
#	user = radius
#	group = radius
	allow_core_dumps = no
	max_attributes = 200
	reject_delay = 1
	status_server = no
	allow_vulnerable_openssl = yes
}

proxy_requests  = no

$INCLUDE ${myconfdir}/clients.conf

thread pool {
	start_servers = 5
	max_servers = 32
	min_spare_servers = 3
	max_spare_servers = 10
#	max_queue_size = 65536
	max_requests_per_server = 0
	auto_limit_acct = no
}

modules {
#	$INCLUDE mods-enabled/
	detail auth_log {
        filename = ${logdir}/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d
        permissions = 0600
	}

	detail reply_log {
        filename = ${logdir}/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d
        permissions = 0600
	}

	chap {
	}

	files {
		filename = ${myconfdir}/users
	}

    eap {
	    default_eap_type = tls
	    timer_expire     = 60
	    ignore_unknown_eap_types = no
	    max_sessions = ${max_requests}

		md5 {
		}

	    tls-config tls-common {
		    private_key_file = ${certdir}/server.pem
		    certificate_file = ${certdir}/server.pem
		    ca_file = ${cadir}/ca.pem
		    dh_file = ${certdir}/dh
	#	    check_crl = yes
	#	    check_all_crl = yes
		    ca_path = ${cadir}
		    cipher_list = "DEFAULT"
		    cipher_server_preference = yes
#		    disable_tlsv1_2 = no
#		    disable_tlsv1_1 = no
#		    disable_tlsv1 = no
#		    tls_min_version = "1.0"
#		    tls_max_version = "1.2"
		    ecdh_curve = "prime256v1"
	    }

        tls {
            tls = tls-common
            require_client_cert = yes
        }

		ttls {
	        tls = tls-common
            default_eap_type = md5
            copy_request_to_tunnel = no
            use_tunneled_reply = no
            virtual_server = "inner-tunnel"
    #       include_length = yes
            require_client_cert = yes
		}
    }

#    always reject {
#        rcode = reject
#    }
#    always fail {
#        rcode = fail
#    }
#    always ok {
#        rcode = ok
#    }
#    always handled {
#        rcode = handled
#    }
#    always invalid {
#        rcode = invalid
#    }
#    always userlock {
#        rcode = userlock
#    }
#    always notfound {
#        rcode = notfound
#    }
#    always noop {
#        rcode = noop
#    }
#    always updated {
#        rcode = updated
#    }

    date {
	    format = "%b %e %Y %H:%M:%S %Z"
    }

    unpack {
    }

    utf8 {
    }


}

instantiate {
}

# policy {
#	$INCLUDE policy.d/
# }

server default {
    listen {
	    type = auth
	    ipaddr = *
	    port = 1812

 	    limit {
	        max_connections = 16
	        lifetime = 0
	        idle_timeout = 30
	    }
    }

    authorize {
		auth_log

	    eap {
		    ok = return
	    }
    }

    authenticate {
	    eap
    }

	post-auth {
		reply_log
	}
}

server inner-tunnel {
    listen {
	    type = auth
	    ipaddr = 127.0.0.1
	    port = 18120
    }

    authorize {
		chap
		eap {
			ok = return
		}
		files
	}

    authenticate {
		Auth-Type CHAP {
			chap
		}
		eap
    }

	post-auth {
	}
}




